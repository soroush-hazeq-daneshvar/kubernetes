apiVersion: v1
kind: Namespace
metadata:
  name: wordpress-deploy

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-data-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: mysql-data-sc
  hostPath:
    path: /mnt/mysql-data

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: wordpress-data-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: wordpress-data-sc
  hostPath:
    path: /mnt/wordpress-data

---

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mysql-data-sc
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: wordpress-data-sc
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: wordpress-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data-pvc
      containers:
        - name: mysql
          image: mysql:5.7
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: ASD.asd@123
            - name: MYSQL_DATABASE
              value: wordpress
            - name: MYSQL_USER
              value: wordpress
            - name: MYSQL_PASSWORD
              value: ASD.asd@123
          ports:
            - containerPort: 3306
              hostPort: 3306
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
          resources:
            limits:
              memory: "500Mi"
              cpu: "500m"
      restartPolicy: Always

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data-pvc
  namespace: wordpress-deploy
spec:
  storageClassName: mysql-data-sc
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: wordpress-deploy
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: wordpress-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      volumes:
        - name: wordpress-data
          persistentVolumeClaim:
            claimName: wordpress-data-pvc
      containers:
        - name: wordpress
          image: wordpress:latest
          env:
            - name: WORDPRESS_DB_HOST
              value: mysql
            - name: WORDPRESS_DB_USER
              value: wordpress
            - name: WORDPRESS_DB_PASSWORD
              value: ASD.asd@123
            - name: WORDPRESS_DB_NAME
              value: wordpress
          ports:
            - containerPort: 443
              hostPort: 443
          volumeMounts:
            - name: wordpress-data
              mountPath: /var/www/html
          resources:
            limits:
              memory: "500Mi"
              cpu: "500m"
      restartPolicy: Always

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wordpress-data-pvc
  namespace: wordpress-deploy
spec:
  storageClassName: wordpress-data-sc
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: wordpress-deploy
spec:
  selector:
    app: wordpress
  ports:
    - protocol: TCP
      port: 443
      targetPort: 443

---

apiVersion: v1
kind: Service
metadata:
  name: phpmyadmin
  namespace: wordpress-deploy
spec:
  selector:
    app: phpmyadmin
  ports:
    - protocol: TCP
      port: 443
      targetPort: 443

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wordpress-ingress
  namespace: wordpress-deploy
spec:
  ingressClassName: nginx
  tls:
    - secretName: soroush-sec
  rules:
    - host: soroush-daneshvar-nl-rg1.maxtld.dev
      http:
        paths:
          - path: /wordress
            pathType: Prefix
            backend:
              service:
                name: wordpress
                port:
                  number: 443
          - path: /dbadmin
            pathType: Prefix
            backend:
              service:
                name: phpmyadmin
                port:
                  number: 443

